---
title: "Rice Rivers Graphs"
author: Ashley Berniche
format: html
editor: visual
---

## Abstract

The following graphs were created using data from the Rice Rivers Center at Virginia Commonwealth University. The graphs depict random data specifications that have no relation to each other. They are correct, scientifically.

```{r echo=FALSE}


library(tidyverse)
library(ggplot2)
source("getricedata.R")
data <- getricedata()

```

Total Rain for each Weekday in January

```{r}

df <- data |>
  filter(Month == "Jan") |>  
  group_by(Weekday) |> 
  summarise(Rain_in = sum(Rain_in))



barplot( df$Rain_in, 
         names.arg = df$Weekday, 
         ylab = "Rain (inches)", xlab = "Day of the Week", main = "Average Total Rain in January") 

```

```{r}

df |> 
  ggplot(aes(x = Weekday, y = Rain_in)) +
  geom_bar(stat = "identity", fill = "skyblue") + 
  labs(title = "Total Rain in January by Day of the Week", 
       x = "Day of the Week", 
       y = "Rain (inches)") +
      theme_minimal() 

```

Average daily temperature for weekdays in February

```{r}

temp <- data |>
  filter(Month == "Feb") |>
  group_by( Day ) |>
  summarise( meantemp = mean( AirTempC) )


ggplot( temp, aes( x = Day, y = meantemp ) ) + geom_point() +
  geom_smooth(se = FALSE, color = "red") +
   labs(title = "Mean Air Temperature in February", 
       x = "Day", 
       y = "Mean Temperature (째C)") 
  
plot(temp$Day, temp$meantemp, 
     main = "Mean Air Temperature in February", 
     xlab = "Day", 
     ylab = "Mean Temperature (째C)",
     pch = 16,           
     col = "black",      
     type = "p")   +      
lines(loess.smooth(temp$Day, temp$meantemp), col = "red", lwd = 2)
    
```

Water Depth on Valentine's Day

```{r}

val <- data |>
  filter( Month == "Feb", Day == 14) 

ggplot( val, aes( y = Depth_m, x = Date) ) + geom_point() +
  labs(title = "Water Depth on Valentine's Day", 
       x = "Time of Day", 
       y = "Depth in Meters)") 
  
plot(val$Date, val$Depth_m,
     main = "Water Depth on Valentine's Day",  
     xlab = "Time of Day",                      
     ylab = "Depth in Meters",                
     pch = 16,                                
     col = "blue",                            
     type = "p")         

  
  
```

Daily Total Rain and Daily Median Temperature

```{r}


rain <- data |>
  group_by(Month, Day, Weekday) |>
  summarise(totalrain = sum(Rain_in), mediantemp = median(AirTempC))


centroids <- rain |>
  group_by(Month) |>
  summarise(mrain = mean(totalrain), mtemp = mean(mediantemp))

ggplot(rain, aes(totalrain, y = mediantemp)) +
  geom_point(aes(color = Month)) +
  geom_point(data = centroids, aes(x = mrain, y = mtemp), color = "red", size = 2) +  
  geom_text(data = centroids, aes(x = mrain, y = mtemp, label = Month), color = "black", fontface = "bold", vjust = -1) +  
  facet_wrap(~ Month) +  
  labs(title = "Daily Total Rain vs. Median Temperature by Month",
       x = "Daily Total Rain (mm)",
       y = "Daily Median Temperature (째C)") +
  theme_minimal()  


 
```

```{r}
plot(rain$totalrain, rain$mediantemp, 
     col = as.factor(rain$Month),    
     pch = 16,                       # Point character
     main = "Daily Total Rain vs. Median Temperature", 
     xlab = "Daily Total Rain (mm)", 
     ylab = "Daily Median Temperature (째C)")

points(centroids$mrain, centroids$mtemp, 
       pch = 19, col = "red", cex = 2)  


legend("topright", legend = unique(rain$Month), 
       col = 1:length(unique(rain$Month)), 
       pch = 16, title = "Month", cex = 0.8)



```

Wind Direction January 5-11th

```{r}

wind <- data %>%
  filter(Month == "Jan") %>%
  filter(Day %in% 5:11) %>%
  group_by(Day, WindDir) %>%
  summarise(count = n(), .groups = "drop") 


ggplot(wind, aes(x = WindDir, y = count, fill = factor(Day))) +
  geom_bar(stat = "identity", position = "dodge", alpha = 0.7, color = "black", size = 0.2) +  
  coord_polar(theta = "x") +  
  labs(title = "Wind Direction Frequency (January 5-11)",
       x = "Wind Direction (degrees)",
       y = "Frequency",
       fill = "Day") +
  theme_minimal() +  
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        panel.grid = element_line(color = "grey80"), 
        legend.position = "right") + 
  scale_fill_brewer(palette = "Set1")

```

```{r}

wind <- data[data$Month == "Jan" & data$Day %in% 5:11, ]


wind$WindDir <- as.numeric(as.character(wind$WindDir))


plot(wind$Day, wind$WindDir,
     main = "Wind Direction (January 5-11)",
     xlab = "Day of January",
     ylab = "Wind Direction (Degrees)",
     pch = 16,          # Point character type
     col = "blue",      # Point color
     ylim = c(0, 360))  # Set y-axis limits from 0 to 360 degrees




```
