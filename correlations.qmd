---
title: "Correlation Homework"
author: "Ashley"
format: html
editor: source

---

## Correlations for Rice Rivers Data

1. Look up the library GGally; it has a function named ggpairs(). Use that function to plot the atmospheric data from the Rice Rivers Center for the samples collected from 10 February to 15 February.  

```{r}

library(GGally)
library(dplyr)
library(lubridate)
library(ggplot2)


source("getricedata.R")
rice_data <- getricedata()

filtered_data <- rice_data %>%
  filter(Date >= ymd_hms("2014-02-10 00:00:00") & Date <= ymd_hms("2014-02-15 23:59:59"))


atmospheric_data <- filtered_data %>%
  select(AirTempC, RelHumidity, WindSpeed_mph, BP_HG) %>%
  na.omit() %>%
  mutate(across(everything(), as.numeric)) 


ggpairs(atmospheric_data, title = "Atmospheric Data (Feb 10 - Feb 15, 2014)", progress = FALSE)
```

There's literally no way this is right. 

2, BP_HG had the strongest correlation with a -0.712 correlation coefficient. 

3. Using the first 40 observations in air temperature and barometric pressure from the Rice Center data set, determine if they are individually distributed as normal random variables. 

```{r}
subset_data <- rice_data %>%
  head(40) %>%
  select(AirTempC, BP_HG)

# Check for normality for AirTempC
# Histogram
ggplot(subset_data, aes(x = AirTempC)) +
  geom_histogram(bins = 10, fill = "skyblue", color = "black", alpha = 0.7) +
  ggtitle("Histogram of Air Temperature (C)") +
  theme_minimal()

# Q-Q Plot for AirTempC (Using ggplot2's stat_qq and stat_qq_line)
ggplot(subset_data, aes(sample = AirTempC)) +
  stat_qq() +
  stat_qq_line() +
  ggtitle("Q-Q Plot of Air Temperature (C)") +
  theme_minimal()

# Shapiro-Wilk test for AirTempC
shapiro_airtemp <- shapiro.test(subset_data$AirTempC)
cat("Shapiro-Wilk test for AirTempC:\n")
print(shapiro_airtemp)

# Check for normality for BP_HG
# Histogram
ggplot(subset_data, aes(x = BP_HG)) +
  geom_histogram(bins = 10, fill = "skyblue", color = "black", alpha = 0.7) +
  ggtitle("Histogram of Barometric Pressure (Hg)") +
  theme_minimal()

# Q-Q Plot for BP_HG (Using ggplot2's stat_qq and stat_qq_line)
ggplot(subset_data, aes(sample = BP_HG)) +
  stat_qq() +
  stat_qq_line() +
  ggtitle("Q-Q Plot of Barometric Pressure (Hg)") +
  theme_minimal()

# Shapiro-Wilk test for BP_HG
shapiro_bphg <- shapiro.test(subset_data$BP_HG)
cat("Shapiro-Wilk test for BP_HG:\n")
print(shapiro_bphg)
```

data:  subset_data$AirTempC
W = 0.96246, p-value = 0.2031

data:  subset_data$BP_HG
W = 0.89733, p-value = 0.001601

4. Given your findings in the last question, what kind of correlation statistic would be most appropriate for estimating the correlation between this subset of data?

The air temperature appears to be normally distributed, so I would use the Pearson test. For barometric, I would use the Spearman test since the data is not normally distributed. 

4. Look at a qqnorm() plot of the barometric pressure data you used in the previous example. Is there something that "looks" odd with these data? Explain why those data are the way they are.

The points are distributing in horizontal lines on the plot. This is because a lot of the data is repeating in the dataset. 

5. Using a permutation approach, define the distribution of correlation values between the variables in #3, assuming that the NULL hypothesis is true. Plot these as a histogram and include the observed correlation.  

```{r}
set.seed(123)  # For reproducibility

# Subset the first 40 observations of AirTempC and BP_HG
subset_data <- rice_data %>% 
  select(AirTempC, BP_HG) %>% 
  slice(1:40) %>% 
  na.omit()

# Compute the observed correlation
observed_corr <- cor(subset_data$AirTempC, subset_data$BP_HG, method = "pearson")

# Generate the null distribution
n_permutations <- 1000
null_correlations <- numeric(n_permutations)

for (i in 1:n_permutations) {
  permuted_BP_HG <- sample(subset_data$BP_HG)  # Permute BP_HG
  null_correlations[i] <- cor(subset_data$AirTempC, permuted_BP_HG, method = "pearson")
}

# Plot the null distribution
hist(null_correlations, breaks = 30, col = "lightblue", main = "Null Distribution of Correlations",
     xlab = "Correlation Values", ylab = "Frequency")
abline(v = observed_corr, col = "red", lwd = 2, lty = 2)  # Add observed correlation
text(observed_corr, max(table(cut(null_correlations, 30))) * 0.9, 
     labels = paste("Observed =", round(observed_corr, 2)), col = "red")

```
P-value: 0.001

The null hypothesis is rejected, and the correlation can be considered signifigant. 
